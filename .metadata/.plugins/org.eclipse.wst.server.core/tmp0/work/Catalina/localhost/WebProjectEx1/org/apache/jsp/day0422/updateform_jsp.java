/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-04-25 05:05:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.day0422;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mysql.data.GuestDto;
import mysql.data.GuestDao;

public final class updateform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("mysql.data.GuestDto");
    _jspx_imports_classes.add("mysql.data.GuestDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.0.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Gamja+Flower&family=Gowun+Dodum&family=Jua&family=Lobster&family=Nanum+Pen+Script&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("	<style>\r\n");
      out.write("	img.imgphoto{\r\n");
      out.write("		width: 55px;\r\n");
      out.write("		height: 55px;\r\n");
      out.write("		margin-right: 3px;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.select{\r\n");
      out.write("		border: 2px solid black;\r\n");
      out.write("		box-shadow: 3px 3px 3px gray;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.table{\r\n");
      out.write("		width:500px;\r\n");
      out.write("		border: 1px solid black;\r\n");
      out.write("		font-family: 'Jua';\r\n");
      out.write("		font-size: 20px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("	$(\".btnupdate\").click(function(){\r\n");
      out.write("		var fdata = $(\"#frm\").serialize();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type:\"post\", //데이터 많을 경우 get < post\r\n");
      out.write("			dataType:\"html\",\r\n");
      out.write("			data:fdata,\r\n");
      out.write("			url:\"update.jsp\",\r\n");
      out.write("			success: function(){\r\n");
      out.write("				//수정 성공시 메인 페이지로 이동\r\n");
      out.write("				location.href = \"GuestMain.jsp\";\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("	\r\n");

String num = request.getParameter("num");
//num에 해당하는 dto 받기
GuestDao dao = new GuestDao();
GuestDto dto = dao.getData(num);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<form id=\"frm\" class=\"form-inline\">\r\n");
      out.write("	<caption><b>수정폼</b></caption>\r\n");
      out.write("		<input type=\"hidden\" id=\"num\" name=\"num\" value=\"");
      out.print(num);
      out.write("\">\r\n");
      out.write("		<table class=\"table\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td width=\"350\">작성자 : <input type=\"text\" id=\"writer\"\r\n");
      out.write("					name=\"writer\" class=\"form-control\" style=\"width: 100px;\"\r\n");
      out.write("					value=\"");
      out.print(dto.getWriter());
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td rowspan=\"3\" style=\"cursor: pointer; background-color: orange;\"\r\n");
      out.write("					align=\"center\" valign=\"middle\" class=\"btnupdate\">수정</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><textarea id=\"content\" name=\"content\"\r\n");
      out.write("						style=\"width: 100%; height: 80px;\">");
      out.print(dto.getContent());
      out.write("</textarea></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><input type=\"hidden\" id=\"avata\" name=\"avata\"\r\n");
      out.write("					value=\"");
      out.print(dto.getAvata());
      out.write("\"><br> ");

 					for (int i = 1; i <= 10; i++) {
      out.write(" \r\n");
      out.write(" 					<img src=\"../avata/s");
      out.print(i);
      out.write(".JPG\" class=\"imgphoto\" idx=\"");
      out.print(i);
      out.write("\">\r\n");
      out.write("					");

					if (i == 5) {
					
      out.write(" <br> \r\n");
      out.write("					");
}
 }
 
      out.write(" \r\n");
      out.write(" <script type=\"text/javascript\">\r\n");
      out.write("		//db에 저장된 이미지에 .select 적용\r\n");
      out.write("		var avata = $(\"#avata\").val();\r\n");
      out.write("		$(\"img\").eq(avata-1).addClass(\"select\"); //고른게 1이면 실제로는 0번지 select\r\n");
      out.write("\r\n");
      out.write("		//아바타 클릭시 idx값을 얻어서 #avata에 출력\r\n");
      out.write("		//클릭한 이미지에만 .select 가 적용되도록 하기 \r\n");
      out.write("		$(\"img.imgphoto\").click(function() {\r\n");
      out.write("			$(this).siblings().removeClass(\"select\");\r\n");
      out.write("			$(this).addClass(\"select\");\r\n");
      out.write("			$(\"#avata\").val($(this).attr(\"idx\"));\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
