package day0413;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class Ex2MysqlPerson {
	static final String DRIVER = "com.mysql.jdbc.Driver";
	static final String URL = "jdbc:mysql://localhost:3306/bitcamp"; // 5버전
//	static final String URL = "jdbc:mysql://localhost:3306/bitcamp?serverTimezone=Asia/Seoul"; //5버전,8버전
	Scanner sc = new Scanner(System.in);

	public Ex2MysqlPerson() {
		try {
			Class.forName(DRIVER);
			System.out.println("mysql 드라이버 성공!");
		} catch (ClassNotFoundException e) {
			System.out.println("mysql 드라이버 실패" + e.getMessage());
		}
	}

	public Connection getConnection() {
		Connection conn = null;
		try {
			conn = DriverManager.getConnection(URL, "root", "1234");
			System.out.println("mysql 접근 성공!");
		} catch (SQLException e) {
			System.out.println("mysql 접근 실패!:" + e.getMessage());
		}
		return conn;
	}

	public int getMenu() {
		System.out.println("** 메뉴선택 **");
		System.out.println("1. 추가  2. 전체출력  3. 삭제  4.분석  5.종료");
		int n = Integer.parseInt(sc.nextLine());
		return n;
	}

	public void personInsert() { // 필요한 변수 먼저 주기
		Connection conn = this.getConnection();
		PreparedStatement pstmt = null;
		// Statement : 완벽히 실행할 때 sql 검사
		// PreparedStatement : sql문을 미완성으로 만들고 나중에 match
		String sql = "";

		// 필요한 데이터 입력
		System.out.println("이름 입력");
		String name = sc.nextLine();
		System.out.println("혈액형 입력");
		String blood = sc.nextLine();
		System.out.println("나이 입력");
		int age = Integer.parseInt(sc.nextLine());

		// db 연결
		conn = this.getConnection();
		sql = "insert into person (name, blood, age, writeday) values (?,?,?,now())";
		// ? --> 나중에 넣겠다는 뜻 (prepareStatement)

		try {
			// sql 검사
			pstmt = conn.prepareStatement(sql);
			// ? 갯수만큼 반드시 바인딩 (하나하나 매칭) : ?는 1번 부터 시작
			pstmt.setString(1, name);
			pstmt.setString(2, blood);
			pstmt.setInt(3, age);

			// 실행
			pstmt.execute();
			System.out.println("추가되었습니다!");

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					pstmt.close();
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
			}
		}
	}

	public void personAllWrite() {

	}

	public void personDelete() {

	}

	public void personBloodGroup() {

	}

	public static void main(String[] args) {
		Ex2MysqlPerson ex = new Ex2MysqlPerson();
		while (true) {
			int n = ex.getMenu();
			switch (n) {
			case 1:
				ex.personInsert();
				break;
			case 2:
				ex.personAllWrite();
				break;
			case 3:
				ex.personDelete();
				break;
			case 4:
				ex.personBloodGroup();
				break;

			default:
				System.out.println("프로그램 종료!");
				System.exit(0);
			}

		}
	}

}
